///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "GraphEditor/Core/ULink.hpp"
#include "GraphEditor/Core/UNode.hpp"
#include <stdexcept>

///////////////////////////////////////////////////////////////////////////////
// Namespace UEB
///////////////////////////////////////////////////////////////////////////////
namespace UEB
{

///////////////////////////////////////////////////////////////////////////////
ULink::ULink(TSharedPtr<UPin> source, TSharedPtr<UPin> target)
    : mID(UNode::sNextID++)
    , mSource(source)
    , mTarget(target)
    , mInitialized(false)
{
    if (mSource->GetType() != mTarget->GetType()) {
        throw std::invalid_argument("Incompatible pin types");
    }
}

///////////////////////////////////////////////////////////////////////////////
ULink::~ULink()
{
    if (mInitialized) {
        if (mSource) {
            mSource->RemoveLink(weak_from_this());
        }
        if (mTarget) {
            mTarget->RemoveLink(weak_from_this());
        }
    }
}

///////////////////////////////////////////////////////////////////////////////
TSharedPtr<UPin> ULink::GetSource(void) const
{
    return (mSource);
}

///////////////////////////////////////////////////////////////////////////////
TSharedPtr<UPin> ULink::GetTarget(void) const
{
    return (mTarget);
}

///////////////////////////////////////////////////////////////////////////////
ULink::ID ULink::GetID(void) const
{
    return (mID);
}

///////////////////////////////////////////////////////////////////////////////
void ULink::Initialize(void)
{
    mSource->AddLink(shared_from_this());
    mTarget->AddLink(shared_from_this());
    mInitialized = true;
}

} // !namespace UEB
