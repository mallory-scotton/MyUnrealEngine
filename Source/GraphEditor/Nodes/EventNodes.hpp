///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "GraphEditor/Core/UNode.hpp"
#include "GraphEditor/Core/UEvaluationContext.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace UEB::Nodes
///////////////////////////////////////////////////////////////////////////////
namespace UEB::Nodes
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class BeginPlayNode : public UNode
{
public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    BeginPlayNode(void)
        : UNode(
            "Event BeginPlay",
            Type::Blueprint,
            ImColor(180, 28, 28),
            NodeIcon::Event
        )
    {
        AddOutputPin(UPin::Type::Flow);
    }

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param context
    ///
    ///////////////////////////////////////////////////////////////////////////
    void Evaluate(UEvaluationContext& context) override
    {
        context.template SetPinValue<bool>(mOutputs[0], true);
    }
};

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class EndPlayNode : public UNode
{
public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    EndPlayNode(void)
        : UNode(
            "Event EndPlay",
            Type::Blueprint,
            ImColor(180, 28, 28),
            NodeIcon::Event
        )
    {
        AddOutputPin(UPin::Type::Flow);
    }

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param context
    ///
    ///////////////////////////////////////////////////////////////////////////
    void Evaluate(UEvaluationContext& context) override
    {
        context.template SetPinValue<bool>(mOutputs[0], true);
    }
};

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class TickNode : public UNode
{
public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    TickNode(void)
        : UNode(
            "Event Tick",
            Type::Blueprint,
            ImColor(180, 28, 28),
            NodeIcon::Event
        )
    {
        AddOutputPin(UPin::Type::Flow);
        AddOutputPin(UPin::Type::Float, "Delta Seconds");
    }

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param context
    ///
    ///////////////////////////////////////////////////////////////////////////
    void Evaluate(UEvaluationContext& context) override
    {
        context.template SetPinValue<bool>(mOutputs[0], true);
    }
};

} // !namespace UEB::Nodes
