///////////////////////////////////////////////////////////////////////////////
// Header guard
///////////////////////////////////////////////////////////////////////////////
#pragma once

///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Utils/Types.hpp"
#include "GraphEditor/Core/UClass.hpp"
#include "GraphEditor/Core/UEvaluationContext.hpp"
#include "Utils/Maths/Vec2.hpp"
#include <SFML/Graphics.hpp>

///////////////////////////////////////////////////////////////////////////////
// Namespace UEB
///////////////////////////////////////////////////////////////////////////////
namespace UEB
{

///////////////////////////////////////////////////////////////////////////////
/// \brief
///
///////////////////////////////////////////////////////////////////////////////
class AActor
{
protected:
    ///////////////////////////////////////////////////////////////////////////
    //
    ///////////////////////////////////////////////////////////////////////////
    TSharedPtr<UClass> mClass;      //<!
    UEvaluationContext mContext;    //<!
    bool mActive;                   //<!
    FVec2 mLocation;                //<!
    FVec2 mScale;                   //<!

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    AActor(TSharedPtr<UClass> inClass);

public:
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    void BeginPlay(void);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param deltaSeconds
    ///
    ///////////////////////////////////////////////////////////////////////////
    void Tick(float deltaSeconds);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    void EndPlay(void);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    bool IsActive(void) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param active
    ///
    ///////////////////////////////////////////////////////////////////////////
    void SetActive(bool active);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param key
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void KeyPressed(sf::Keyboard::Key key);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param key
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void KeyReleased(sf::Keyboard::Key key);

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    ///////////////////////////////////////////////////////////////////////////
    virtual void Render(sf::RenderTarget& target) const;
    
    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \return
    ///
    ///////////////////////////////////////////////////////////////////////////
    FVec2 GetLocation(void) const;

    ///////////////////////////////////////////////////////////////////////////
    /// \brief
    ///
    /// \param location
    ///
    ///////////////////////////////////////////////////////////////////////////
    void SetLocation(const FVec2& location);
};

} // !namespace UEB
