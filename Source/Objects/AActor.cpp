///////////////////////////////////////////////////////////////////////////////
// Dependencies
///////////////////////////////////////////////////////////////////////////////
#include "Objects/AActor.hpp"
#include "GraphEditor/Nodes/EventNodes.hpp"

///////////////////////////////////////////////////////////////////////////////
// Namespace UEB
///////////////////////////////////////////////////////////////////////////////
namespace UEB
{

///////////////////////////////////////////////////////////////////////////////
AActor::AActor(TSharedPtr<UClass> inClass)
    : mClass(inClass)
    , mActive(true)
    , mLocation(0.f)
    , mScale(1.f)
{
    mContext.SetActor(this);
}

///////////////////////////////////////////////////////////////////////////////
void AActor::BeginPlay(void)
{
    mClass->GetGraph()->Execute<Nodes::BeginPlayNode>(mContext);
}

///////////////////////////////////////////////////////////////////////////////
void AActor::Tick(float deltaSeconds)
{
    mClass->GetGraph()->Execute<Nodes::TickNode>(mContext, deltaSeconds);
}

///////////////////////////////////////////////////////////////////////////////
void AActor::EndPlay(void)
{
    mClass->GetGraph()->Execute<Nodes::EndPlayNode>(mContext);
}

///////////////////////////////////////////////////////////////////////////////
bool AActor::IsActive(void) const
{
    return (mActive);
}

///////////////////////////////////////////////////////////////////////////////
void AActor::SetActive(bool active)
{
    mActive = active;
}

///////////////////////////////////////////////////////////////////////////////
void AActor::KeyPressed(sf::Keyboard::Key key)
{
    (void)key;
}

///////////////////////////////////////////////////////////////////////////////
void AActor::KeyReleased(sf::Keyboard::Key key)
{
    (void)key;
}

///////////////////////////////////////////////////////////////////////////////
void AActor::Render(sf::RenderTarget& target) const
{
    (void)target;
}

///////////////////////////////////////////////////////////////////////////////
FVec2 AActor::GetLocation(void) const
{
    return (mLocation);
}

///////////////////////////////////////////////////////////////////////////////
void AActor::SetLocation(const FVec2& location)
{
    mLocation = location;
}

} // !namespace UEB
